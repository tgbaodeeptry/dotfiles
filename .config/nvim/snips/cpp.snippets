snippet defineUF "UnionFind" 
struct UnionFind {
  vector<int> parents;
  vector<int> size;

  void init(int n) {
    parents.resize(n + 1);
    size.assign(n + 1, 1);

    for (int i = 1; i < n; ++i)
      parents[i] = i;
  }

  int find(int u) {
    if (u == parents[u]) return u;
    return parents[u] = find(parents[u]);
  }

  void join(int u, int v) {
    int a = find(u);
    int b = find(v);

    if (a == b) return;
    if (size[a] > size[b]) swap(a, b);

    parents[a] = b;
    size[b] += size[a];
  }
};
${0}
endsnippet

# Snippets systax
snippet for "for" 
for (${1}; ${2}; ${3}) ${0}
endsnippet

snippet REP "REP" 
for (${1:int} ${2:i} = ${3}; ${0:$2} < ${4}; ++${0:$2}) ${0}
endsnippet

snippet FOR "FOR" 
for (${1:int} ${2:i} = ${3}; ${0:$2} <= ${4}; ++${0:$2}) ${0}
endsnippet

snippet RED "RED" 
for (${1:int} ${2:i} = ${3}; ${0:$2} > ${4}; --${0:$2}) ${0}
endsnippet

snippet FOD "FOD" 
for (${1:int} ${2:i} = ${3}; ${0:$2} >= ${4}; --${0:$2}) ${0}
endsnippet

snippet trav "trav" 
for (auto &${1} : ${2}) ${0}
endsnippet

snippet vec "vector"
vector<${1:int}> ${2:name}
endsnippet

snippet vector "vector"
vector<${1:int}> ${2:name}
endsnippet

snippet pair "pair"
pair<${1:int}, ${2:int}> ${3:name}
endsnippet

snippet map "map"
map<${1:int}, ${2:int}> ${3:name}
endsnippet

snippet umap "unordered map"
unordered_map<${1:int}, ${2:int}> ${3:name}
endsnippet

snippet set "set"
set<${1:int}> ${2:name}
endsnippet

snippet uset "unordered set"
unordered_set<${1:int}> ${2:name}
endsnippet

snippet while "While"
while (${1:true}) ${0}
endsnippet

snippet if "If"
if (${1:true}) ${0}
endsnippet

snippet definedfs "DFS"
void ${1}(int u) {
  ${2}[u] = true;
  for (auto &v : ${3}[u]) {
    if (!${0:$2}[v]) {
      ${0:$1}(v);
    }
  }
} 
${0}
endsnippet

snippet cpow "binary pow"
llong cpow_mod(llong a, llong b) { 
  llong ans = 1LL; 
  while (b) { 
    if (b & 1)
      ans *= a; 

    a *= a; 
    b >>= 1; 
  }; 

  return ans; 
};
endsnippet

snippet cpowmod "binary pow mod"
int cpow_mod(llong a, llong b) { 
  int ans = 1; 
  while (b) { 
    if (b & 1)
      ans = (1LL * ans * a) % MOD; 

    a = (a * a) % MOD; 
    b >>= 1; 
  }; 

  return ans; 
};
endsnippet

snippet vi "" 
vector<int> ${1:name}
endsnippet

snippet st "" 
string ${1:name}
endsnippet

snippet pii "" 
pair<int, int> ${1:name}
endsnippet

snippet mii "" 
map<int, int> ${1:name}
endsnippet

snippet umii "" 
unordered_map<int, int> ${1:name}
endsnippet

